name: Publish to NPM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  publish-to-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

          # 打包
      - run: npm install
      - run: npm run build

          # 根据commit关键词触发publish的版本 https://github.com/phips28/gh-action-bump-version#workflow
          # If the string "BREAKING CHANGE", "major" or the Attention pattern refactor!: drop support for Node 6 is found anywhere in any of the commit messages or descriptions the major version will be incremented.
          # If a commit message begins with the string "feat" or includes "minor" then the minor version will be increased. This works for most common commit metadata for feature additions: "feat: new API" and "feature: new API".
          # If a commit message contains the word "pre-alpha" or "pre-beta" or "pre-rc" then the pre-release version will be increased (for example specifying pre-alpha: 1.6.0-alpha.1 -> 1.6.0-alpha.2 or, specifying pre-beta: 1.6.0-alpha.1 -> 1.6.0-beta.0)
          # All other changes will increment the patch version.
      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACTION }}
        with:
          patch-wording:  'feat'     # Providing patch-wording will override commits
          minor-wording:  'feat-minor'
          major-wording:  'BREAK CHANGE'

      - name: Publish to NPM
        run: npm publish || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 读取对应的 package.json 版本
      - name: Read package.json
        uses: tyankatsu0105/read-package-version-actions@v1
        id: package-version

      - name: Create Release for Tag
        id: release_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACTION }} # 这块需要用到 github的token，因为需要对分之进行代码推送
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: Release v${{ steps.package-version.outputs.version }}
          prerelease: false # 是否为预发布版本
          # body: |
          #   请点击查看 [更新日志]().